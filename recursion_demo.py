# 汉诺塔问题


def f(n):
    """
    问题描述：大梵天创造世界时造了三根金钢石柱子，其中一根柱子自底向上叠着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。

    思路：
    1, 用递归的思想解决这个问题
    2，将n个盘子的移动分解成 (n - 1)个盘子需要的次数 + 1次 + (n - 1)个盘子需要的次数
    3，结束条件，当n=1的时候，只需要移动一次
    :param n: 代表要移动的盘子数量
    :return: 返回需要移动的次数
    """
    if n == 1:
        return 1
    if n > 1:
        return 2 * f(n-1) + 1


if __name__ == '__main__':
    print('' % f(3))
    print(f(4))
    print(f(5))
    print(f(64)/60/60/24/365)